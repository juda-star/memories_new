{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","LIKE","api","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","message","updatePost","likePost","deletePost"],"sources":["C:/Users/Yehuda/Desktop/tech career/projects/git/memoriesNew/memories/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL,FETCH_BY_SEARCH,FETCH_POST,START_LOADING,END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({type:START_LOADING})\r\n    const { data } = await api.fetchPost(id);\r\n    console.log(data);\r\n    dispatch({ type: FETCH_POST, payload: data });\r\n    dispatch({type:END_LOADING})\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({type:START_LOADING})\r\n    const { data } = await api.fetchPosts(page);\r\n    console.log(data);\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n    dispatch({type:END_LOADING})\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({type:START_LOADING})\r\n    const { data:{data} } = await api.fetchPostsBySearch(searchQuery);\r\ndispatch({type:FETCH_BY_SEARCH,payload:data})\r\ndispatch({type:END_LOADING})\r\n\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    dispatch({type:START_LOADING})\r\n    const { data } = await api.createPost(post);\r\n\r\n\r\n    \r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}